{"ast":null,"code":"var _jsxFileName = \"/Users/david/Day 1/Stranger Things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { updatePost, deletePost, getPosts } from '../api';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    fetchPosts,\n    navigate\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newtitle, setNewTitle] = useState(title);\n  const [newdescription, setNewDescription] = useState(description);\n  const [newprice, setNewPrice] = useState(price);\n  const [newlocation, setNewLocation] = useState(location);\n  const [newwillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      title: newtitle,\n      description: newdescription,\n      price: newprice,\n      location: newlocation,\n      willDeliver: newwillDeliver\n    };\n    await updatePost(token, updatedPost, postID);\n    fetchPosts();\n    navigate('/posts');\n  }\n\n  return (\n    /*#__PURE__*/\n    // This needs to be a form that accepts the 5 request parameters for creating a post\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form\",\n        onSubmit: event => {\n          event.preventDefault();\n          editPost();\n          window.location - '/posts';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: title,\n          onChange: event => setNewTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          id: \"description\",\n          type: \"text\",\n          placeholder: description,\n          onChange: event => setNewDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: price,\n          onChange: event => setNewPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: location,\n          onChange: event => setNewLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"checkbox\",\n          checked: newwillDeliver,\n          onChange: event => setNewWillDeliver(event.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Edit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => {\n            deletePost(token, postID);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  );\n}; // const deletePost = () =>{\n//   return(\n//     <button type=\"submit\" onClick={() =>{\n//       deletePost(token,postID);\n//       getPosts();\n//       window.location - '/posts'\n//     }}>\n//       Delete\n//     </button>\n//   )\n// }\n\n\n_s(EditPost, \"NOt8ZycvrXu3JKdwU14bnJiNJN4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","updatePost","deletePost","getPosts","useParams","EditPost","posts","token","fetchPosts","navigate","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newtitle","setNewTitle","newdescription","setNewDescription","newprice","setNewPrice","newlocation","setNewLocation","newwillDeliver","setNewWillDeliver","editPost","updatedPost","event","preventDefault","window","target","value","checked"],"sources":["/Users/david/Day 1/Stranger Things/src/components/EditPost.js"],"sourcesContent":["\n\nimport React, { useState } from 'react';\nimport {updatePost, deletePost, getPosts} from '../api'\nimport { useParams } from 'react-router-dom';\n\n\n\n\n\nconst EditPost = ({ posts, token,fetchPosts, navigate }) => {\n    const { postID } = useParams();\n  \n    const [currentPost] = posts.filter(post => post._id === postID);\n    \n    const {title, description, location, price, willDeliver} = currentPost;\n\n\n const [newtitle, setNewTitle] = useState(title);\nconst [newdescription, setNewDescription] = useState(description);\nconst [newprice, setNewPrice] = useState(price);\nconst [newlocation, setNewLocation] = useState(location);\nconst [newwillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n\nasync function editPost() {\n    const updatedPost = {\n        title: newtitle,\n        description: newdescription,\n        price: newprice,\n        location: newlocation,\n        willDeliver: newwillDeliver\n       \n        \n    }\n   \n    \n    await updatePost(token,updatedPost,postID)\n    fetchPosts();\n    navigate('/posts')\n   \n  \n  }\n\n  \n  return (\n    // This needs to be a form that accepts the 5 request parameters for creating a post\n    <>\n     <form  class='form' onSubmit={(event) => {\n      event.preventDefault();\n      editPost();\n      window.location - '/posts'\n    }}>\n    <input \n      class=\"createPost\"\n        type='text'\n        placeholder={title}\n        onChange={(event) => setNewTitle(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n      id='description'\n        type='text'\n        placeholder={description}\n        onChange={(event) => setNewDescription(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='text'\n        placeholder={price}\n        onChange={(event) => setNewPrice(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='text'\n        placeholder={location}\n        onChange={(event) => setNewLocation(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='checkbox'\n        checked={newwillDeliver}\n        onChange={(event) => setNewWillDeliver(event.target.checked)}\n      />\n    <button type=\"submit\">Edit Post</button>\n    <button type=\"submit\" onClick={() =>{\n      deletePost(token,postID);\n    }}>\n      Delete\n    </button>\n\n    </form>\n    </>\n \n   )\n}\n\n// const deletePost = () =>{\n\n//   return(\n//     <button type=\"submit\" onClick={() =>{\n//       deletePost(token,postID);\n//       getPosts();\n//       window.location - '/posts'\n//     }}>\n//       Delete\n//     </button>\n//   )\n// }\n\n\n\nexport default EditPost;"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,QAAhC,QAA+C,QAA/C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAMA,MAAMC,QAAQ,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAAEC,KAAF;IAASC,KAAT;IAAeC,UAAf;IAA2BC;EAA3B,CAA0C;EACxD,MAAM;IAAEC;EAAF,IAAaN,SAAS,EAA5B;EAEA,MAAM,CAACO,WAAD,IAAgBL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAlC,CAAtB;EAEA,MAAM;IAACK,KAAD;IAAQC,WAAR;IAAqBC,QAArB;IAA+BC,KAA/B;IAAsCC;EAAtC,IAAqDR,WAA3D;EAGH,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAACe,KAAD,CAAxC;EACD,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAACgB,WAAD,CAApD;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAACkB,KAAD,CAAxC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAACiB,QAAD,CAA9C;EACA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,CAACmB,WAAD,CAApD;;EAGA,eAAeW,QAAf,GAA0B;IACtB,MAAMC,WAAW,GAAG;MAChBhB,KAAK,EAAEK,QADS;MAEhBJ,WAAW,EAAEM,cAFG;MAGhBJ,KAAK,EAAEM,QAHS;MAIhBP,QAAQ,EAAES,WAJM;MAKhBP,WAAW,EAAES;IALG,CAApB;IAWA,MAAM3B,UAAU,CAACM,KAAD,EAAOwB,WAAP,EAAmBrB,MAAnB,CAAhB;IACAF,UAAU;IACVC,QAAQ,CAAC,QAAD,CAAR;EAGD;;EAGD;IAAA;IACE;IACA;MAAA,uBACC;QAAO,KAAK,EAAC,MAAb;QAAoB,QAAQ,EAAGuB,KAAD,IAAW;UACxCA,KAAK,CAACC,cAAN;UACAH,QAAQ;UACRI,MAAM,CAACjB,QAAP,GAAkB,QAAlB;QACD,CAJA;QAAA,wBAKD;UACE,KAAK,EAAC,YADR;UAEI,IAAI,EAAC,MAFT;UAGI,WAAW,EAAEF,KAHjB;UAII,QAAQ,EAAGiB,KAAD,IAAWX,WAAW,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAd;QAJpC;UAAA;UAAA;UAAA;QAAA,QALC,eAWE;UACD,KAAK,EAAC,YADL;UAED,EAAE,EAAC,aAFF;UAGC,IAAI,EAAC,MAHN;UAIC,WAAW,EAAEpB,WAJd;UAKC,QAAQ,EAAGgB,KAAD,IAAWT,iBAAiB,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAd;QALvC;UAAA;UAAA;UAAA;QAAA,QAXF,eAkBE;UACD,KAAK,EAAC,YADL;UAEC,IAAI,EAAC,MAFN;UAGC,WAAW,EAAElB,KAHd;UAIC,QAAQ,EAAGc,KAAD,IAAWP,WAAW,CAACO,KAAK,CAACG,MAAN,CAAaC,KAAd;QAJjC;UAAA;UAAA;UAAA;QAAA,QAlBF,eAwBE;UACD,KAAK,EAAC,YADL;UAEC,IAAI,EAAC,MAFN;UAGC,WAAW,EAAEnB,QAHd;UAIC,QAAQ,EAAGe,KAAD,IAAWL,cAAc,CAACK,KAAK,CAACG,MAAN,CAAaC,KAAd;QAJpC;UAAA;UAAA;UAAA;QAAA,QAxBF,eA8BE;UACD,KAAK,EAAC,YADL;UAEC,IAAI,EAAC,UAFN;UAGC,OAAO,EAAER,cAHV;UAIC,QAAQ,EAAGI,KAAD,IAAWH,iBAAiB,CAACG,KAAK,CAACG,MAAN,CAAaE,OAAd;QAJvC;UAAA;UAAA;UAAA;QAAA,QA9BF,eAoCD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApCC,eAqCD;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAE,MAAK;YAClCnC,UAAU,CAACK,KAAD,EAAOG,MAAP,CAAV;UACD,CAFD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QArCC;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;EAFF;AAkDD,CArFD,C,CAuFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlGML,Q;UACiBD,S;;;KADjBC,Q;AAsGN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
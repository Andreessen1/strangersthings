{"ast":null,"code":"var _jsxFileName = \"/Users/david/Day 1/Stranger Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function postMatches(post, string) {\n    const {\n      title,\n      description\n    } = post;\n\n    if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n      return post;\n    } // return true if any of the fields you want to check against include the text\n    // strings have an .includes() method \n\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Search\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"posts\",\n      children: postsToDisplay.map(post => {\n        const {\n          description,\n          location,\n          price,\n          title,\n          _id,\n          isAuthor\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/edit-post/${_id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${_id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Fragment","useState","Link","Posts","posts","searchTerm","setSearchTerm","postMatches","post","string","title","description","toLowerCase","includes","filteredPosts","filter","postsToDisplay","length","event","preventDefault","target","value","map","location","price","_id","isAuthor"],"sources":["/Users/david/Day 1/Stranger Things/src/components/Posts.js"],"sourcesContent":["import React, { Fragment,useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst Posts = ({ posts }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    \n    function postMatches(post, string) {\n        const{ title, description} = post;\n    \n        if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n            return post;\n        }\n      // return true if any of the fields you want to check against include the text\n      // strings have an .includes() method \n    }\n    \n    const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n    \n    \n\n    return (\n        <div>\n        \n        <div>\n            <form onSubmit={(event) => {\n                event.preventDefault();\n            }}> \n              <input\n               type = 'text'\n               placeholder = 'Search'\n               onChange = {(event) => setSearchTerm(event.target.value)}\n              ></input>\n              <button type='Search'>Search</button>\n             </form>\n            </div>\n        \n        <div class=\"posts\">\n        {\n           postsToDisplay.map((post) => {\n               const {description, location, price, title, _id, isAuthor} = post;\n             return (\n                 <div class='card' key={_id} >\n             <h3>{title}</h3>\n             <p>Description: {description}</p>\n             <p>Price: {price}</p>\n             <p>Location: {location}</p>\n             {\n                 isAuthor ? (\n                     <div>\n            \n                    <Link to={`/posts/edit-post/${_id}`}>Edit</Link>\n                    </div>\n                 ) :(<div> <Link to={`/posts/${_id}`}>View</Link>\n                      </div>\n                 )\n             }\n             </div>\n             )  \n           }) \n        }\n        </div>\n        </div>\n    )\n}\n\n    \n    \n\n    \n\nexport default Posts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAKA,MAAMC,KAAK,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;EAEA,SAASM,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;IAC/B,MAAK;MAAEC,KAAF;MAASC;IAAT,IAAwBH,IAA7B;;IAEA,IAAIE,KAAK,CAACE,WAAN,GAAoBC,QAApB,CAA6BJ,MAAM,CAACG,WAAP,EAA7B,KAAsDD,WAAW,CAACC,WAAZ,GAA0BC,QAA1B,CAAmCJ,MAAM,CAACG,WAAP,EAAnC,CAA1D,EAAoH;MAChH,OAAOJ,IAAP;IACH,CAL8B,CAMjC;IACA;;EACD;;EAED,MAAMM,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAaP,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAhC,CAAtB;EACA,MAAMW,cAAc,GAAGX,UAAU,CAACY,MAAX,GAAoBH,aAApB,GAAoCV,KAA3D;EAIA,oBACI;IAAA,wBAEA;MAAA,uBACI;QAAM,QAAQ,EAAGc,KAAD,IAAW;UACvBA,KAAK,CAACC,cAAN;QACH,CAFD;QAAA,wBAGE;UACC,IAAI,EAAG,MADR;UAEC,WAAW,EAAG,QAFf;UAGC,QAAQ,EAAKD,KAAD,IAAWZ,aAAa,CAACY,KAAK,CAACE,MAAN,CAAaC,KAAd;QAHrC;UAAA;UAAA;UAAA;QAAA,QAHF,eAQE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFA,eAeA;MAAK,KAAK,EAAC,OAAX;MAAA,UAEGL,cAAc,CAACM,GAAf,CAAoBd,IAAD,IAAU;QACzB,MAAM;UAACG,WAAD;UAAcY,QAAd;UAAwBC,KAAxB;UAA+Bd,KAA/B;UAAsCe,GAAtC;UAA2CC;QAA3C,IAAuDlB,IAA7D;QACF,oBACI;UAAK,KAAK,EAAC,MAAX;UAAA,wBACJ;YAAA,UAAKE;UAAL;YAAA;YAAA;YAAA;UAAA,QADI,eAEJ;YAAA,4BAAiBC,WAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QAFI,eAGJ;YAAA,sBAAWa,KAAX;UAAA;YAAA;YAAA;YAAA;UAAA,QAHI,eAIJ;YAAA,yBAAcD,QAAd;UAAA;YAAA;YAAA;YAAA;UAAA,QAJI,EAMAG,QAAQ,gBACJ;YAAA,uBAED,QAAC,IAAD;cAAM,EAAE,EAAG,oBAAmBD,GAAI,EAAlC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAFC;YAAA;YAAA;YAAA;UAAA,QADI,gBAKJ;YAAA,6BAAM,QAAC,IAAD;cAAM,EAAE,EAAG,UAASA,GAAI,EAAxB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAN;UAAA;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA,GAAuBA,GAAvB;UAAA;UAAA;UAAA;QAAA,QADJ;MAkBD,CApBD;IAFH;MAAA;MAAA;MAAA;IAAA,QAfA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2CH,CA7DD;;GAAMtB,K;;KAAAA,K;AAoEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
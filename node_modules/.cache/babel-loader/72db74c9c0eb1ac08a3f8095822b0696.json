{"ast":null,"code":"var _jsxFileName = \"/Users/david/Day 1/Stranger Things/src/components/SearchPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPost = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function postMatches(post, string) {\n    const {\n      title,\n      description\n    } = post;\n\n    if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n      return post;\n    } // return true if any of the fields you want to check against include the text\n    // strings have an .includes() method \n\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts; // then, in our jsx below... map over postsToDisplay instead of posts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchedBar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPost, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = SearchPost;\nexport default SearchPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPost\");","map":{"version":3,"names":["React","useState","SearchPost","posts","searchTerm","setSearchTerm","postMatches","post","string","title","description","toLowerCase","includes","filteredPosts","filter","postsToDisplay","length","event","preventDefault","target","value"],"sources":["/Users/david/Day 1/Stranger Things/src/components/SearchPost.js"],"sourcesContent":["import React, {useState} from 'react';\n\n\nconst SearchPost = ({posts}) => {\n\nconst [searchTerm, setSearchTerm] = useState('');\n\nfunction postMatches(post, string) {\n    const{ title, description} = post;\n\n    if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n        return post;\n    }\n  // return true if any of the fields you want to check against include the text\n  // strings have an .includes() method \n}\n\nconst filteredPosts = posts.filter(post => postMatches(post, searchTerm));\nconst postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n\n\n// then, in our jsx below... map over postsToDisplay instead of posts\n\nreturn (\n    <div className='searchedBar'>\n        <form onSubmit={(event) => {\n            event.preventDefault();\n        }}> \n          <input\n           type = 'text'\n           placeholder = 'Search'\n           onChange = {(event) => setSearchTerm(event.target.value)}\n          ></input>\n          <button type='Search'>Search</button>\n         </form>\n        </div>\n)\n}\n\nexport default SearchPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,MAAMC,UAAU,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAEhC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;;EAEA,SAASK,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;IAC/B,MAAK;MAAEC,KAAF;MAASC;IAAT,IAAwBH,IAA7B;;IAEA,IAAIE,KAAK,CAACE,WAAN,GAAoBC,QAApB,CAA6BJ,MAAM,CAACG,WAAP,EAA7B,KAAsDD,WAAW,CAACC,WAAZ,GAA0BC,QAA1B,CAAmCJ,MAAM,CAACG,WAAP,EAAnC,CAA1D,EAAoH;MAChH,OAAOJ,IAAP;IACH,CAL8B,CAMjC;IACA;;EACD;;EAED,MAAMM,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAaP,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAhC,CAAtB;EACA,MAAMW,cAAc,GAAGX,UAAU,CAACY,MAAX,GAAoBH,aAApB,GAAoCV,KAA3D,CAfgC,CAmBhC;;EAEA,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,uBACI;MAAM,QAAQ,EAAGc,KAAD,IAAW;QACvBA,KAAK,CAACC,cAAN;MACH,CAFD;MAAA,wBAGE;QACC,IAAI,EAAG,MADR;QAEC,WAAW,EAAG,QAFf;QAGC,QAAQ,EAAKD,KAAD,IAAWZ,aAAa,CAACY,KAAK,CAACE,MAAN,CAAaC,KAAd;MAHrC;QAAA;QAAA;QAAA;MAAA,QAHF,eAQE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcC,CAnCD;;GAAMlB,U;;KAAAA,U;AAqCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}
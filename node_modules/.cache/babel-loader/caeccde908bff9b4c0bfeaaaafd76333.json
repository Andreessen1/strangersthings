{"ast":null,"code":"var _jsxFileName = \"/Users/david/Day 1/Stranger Things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { createPost } from '../api';\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    token,\n    fetchPosts,\n    navigate\n  } = _ref;\n  const [newtitle, setNewTitle] = useState('');\n  const [newdescription, setNewDescription] = useState('');\n  const [newprice, setNewPrice] = useState('');\n  const [newlocation, setNewLocation] = useState('');\n  const [newwillDeliver, setNewWillDeliver] = useState('');\n  const newPost = {\n    newtitle,\n    newdescription,\n    newprice,\n    newlocation,\n    newwillDeliver\n  };\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n\n  async function addPost() {\n    const result = await createPost(token, newPost);\n    console.log(result);\n    fetchPosts();\n    navigate('/posts');\n  }\n\n  return (\n    /*#__PURE__*/\n    // This needs to be a form that accepts the 5 request parameters for creating a post\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form\",\n        onSubmit: event => {\n          event.preventDefault();\n          addPost();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: \"Title\",\n          onChange: event => setNewTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          id: \"description\",\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: event => setNewDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: \"Price\",\n          onChange: event => setNewPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"text\",\n          placeholder: \"Location\",\n          onChange: event => setNewLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"createPost\",\n          type: \"checkbox\",\n          placeholder: \"Will deliver\",\n          onChange: event => setNewWillDeliver(event.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create a New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)\n    }, void 0, false)\n  );\n};\n\n_s(EditPost, \"Zb5rDjZf4u6ovi4PAPNFFiYSDb0=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["createPost","React","useState","Navigate","useParams","EditPost","token","fetchPosts","navigate","newtitle","setNewTitle","newdescription","setNewDescription","newprice","setNewPrice","newlocation","setNewLocation","newwillDeliver","setNewWillDeliver","newPost","postID","currentPost","posts","filter","post","_id","title","description","location","price","willDeliver","addPost","result","console","log","event","preventDefault","target","value","checked"],"sources":["/Users/david/Day 1/Stranger Things/src/components/EditPost.js"],"sourcesContent":["\nimport { createPost } from '../api';\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\n\n\n\nconst EditPost = ({ token,fetchPosts, navigate }) => {\n const [newtitle, setNewTitle] = useState('');\nconst [newdescription, setNewDescription] = useState('');\nconst [newprice, setNewPrice] = useState('');\nconst [newlocation, setNewLocation] = useState('');\nconst [newwillDeliver, setNewWillDeliver] = useState('');\n  const newPost = {\n    newtitle,\n    newdescription,\n    newprice,\n    newlocation,\n    newwillDeliver\n  }\n\n  const { postID } = useParams();\n  \n  const [currentPost] = posts.filter(post => post._id === postID);\n  \n  const {title, description, location, price, willDeliver} = currentPost;\n  \n  async function addPost() {\n    const result = await createPost(token, newPost)\n    console.log(result)\n    fetchPosts();\n    navigate('/posts')\n  }\n  \n  return (\n    // This needs to be a form that accepts the 5 request parameters for creating a post\n    <>\n     <form  class='form' onSubmit={(event) => {\n      event.preventDefault();\n      addPost();\n    }}>\n    <input \n      class=\"createPost\"\n        type='text'\n        placeholder='Title'\n        onChange={(event) => setNewTitle(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n      id='description'\n        type='text'\n        placeholder='Description'\n        onChange={(event) => setNewDescription(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='text'\n        placeholder='Price'\n        onChange={(event) => setNewPrice(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='text'\n        placeholder='Location'\n        onChange={(event) => setNewLocation(event.target.value)}\n      />\n       <input \n      class=\"createPost\"\n        type='checkbox'\n        placeholder='Will deliver'\n        onChange={(event) => setNewWillDeliver(event.target.checked)}\n      />\n    <button type=\"submit\">Create a New Post</button>\n    </form>\n    </>\n  )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
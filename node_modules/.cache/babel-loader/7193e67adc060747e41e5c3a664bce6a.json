{"ast":null,"code":"var _jsxFileName = \"/Users/david/Day 1/Stranger Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"posts\",\n      children: posts.map(post => {\n        const {\n          description,\n          location,\n          price,\n          title,\n          _id,\n          isAuthor\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 14\n          }, this), isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/edit-post/${_id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${_id}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Posts;\n\nconst SearchPost = posts => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function postMatches(post, string) {\n    const {\n      title,\n      description\n    } = post;\n\n    if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n      return post;\n    } // return true if any of the fields you want to check against include the text\n    // strings have an .includes() method \n\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts; // then, in our jsx below... map over postsToDisplay instead of posts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchedBar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchPost, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c2 = SearchPost;\nexport default Posts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"SearchPost\");","map":{"version":3,"names":["React","Fragment","Link","Posts","posts","map","post","description","location","price","title","_id","isAuthor","SearchPost","searchTerm","setSearchTerm","useState","postMatches","string","toLowerCase","includes","filteredPosts","filter","postsToDisplay","length","event","preventDefault","target","value"],"sources":["/Users/david/Day 1/Stranger Things/src/components/Posts.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst Posts = ({ posts }) => {\n    return (\n        <div>\n        {/* <SearchPost placeholder=\"Search Posts\"/> */}\n        \n        <div class=\"posts\">\n        {\n           posts.map((post) => {\n               const {description, location, price, title, _id, isAuthor} = post;\n             return (\n                 <div class='card' key={_id} >\n             <h3>{title}</h3>\n             <p>Description: {description}</p>\n             <p>Price: {price}</p>\n             <p>Location: {location}</p>\n             {\n                 isAuthor ? (\n                     <div>\n            \n                    <Link to={`/posts/edit-post/${_id}`}>Edit</Link>\n                    </div>\n                 ) :(<div> <Link to={`/posts/${_id}`}>View</Link>\n                      </div>\n                 )\n             }\n             </div>\n             )  \n           }) \n        }\n        </div>\n        </div>\n    )\n}\nconst SearchPost = (posts) => {\n\n    const [searchTerm, setSearchTerm] = useState('');\n    \n    function postMatches(post, string) {\n        const{ title, description} = post;\n    \n        if (title.toLowerCase().includes(string.toLowerCase()) || description.toLowerCase().includes(string.toLowerCase())) {\n            return post;\n        }\n      // return true if any of the fields you want to check against include the text\n      // strings have an .includes() method \n    }\n    \n    const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n    \n    \n    \n    // then, in our jsx below... map over postsToDisplay instead of posts\n    \n    return (\n        <div className='searchedBar'>\n            <form onSubmit={(event) => {\n                event.preventDefault();\n            }}> \n              <input\n               type = 'text'\n               placeholder = 'Search'\n               onChange = {(event) => setSearchTerm(event.target.value)}\n              ></input>\n              <button type='Search'>Search</button>\n             </form>\n            </div>\n    )\n    }\n    \n\nexport default Posts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAKA,MAAMC,KAAK,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,oBACI;IAAA,uBAGA;MAAK,KAAK,EAAC,OAAX;MAAA,UAEGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;QAChB,MAAM;UAACC,WAAD;UAAcC,QAAd;UAAwBC,KAAxB;UAA+BC,KAA/B;UAAsCC,GAAtC;UAA2CC;QAA3C,IAAuDN,IAA7D;QACF,oBACI;UAAK,KAAK,EAAC,MAAX;UAAA,wBACJ;YAAA,UAAKI;UAAL;YAAA;YAAA;YAAA;UAAA,QADI,eAEJ;YAAA,4BAAiBH,WAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QAFI,eAGJ;YAAA,sBAAWE,KAAX;UAAA;YAAA;YAAA;YAAA;UAAA,QAHI,eAIJ;YAAA,yBAAcD,QAAd;UAAA;YAAA;YAAA;YAAA;UAAA,QAJI,EAMAI,QAAQ,gBACJ;YAAA,uBAED,QAAC,IAAD;cAAM,EAAE,EAAG,oBAAmBD,GAAI,EAAlC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAFC;YAAA;YAAA;YAAA;UAAA,QADI,gBAKJ;YAAA,6BAAM,QAAC,IAAD;cAAM,EAAE,EAAG,UAASA,GAAI,EAAxB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAN;UAAA;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA,GAAuBA,GAAvB;UAAA;UAAA;UAAA;QAAA,QADJ;MAkBD,CApBD;IAFH;MAAA;MAAA;MAAA;IAAA;EAHA;IAAA;IAAA;IAAA;EAAA,QADJ;AA+BH,CAhCD;;KAAMR,K;;AAiCN,MAAMU,UAAU,GAAIT,KAAD,IAAW;EAAA;;EAE1B,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,EAAD,CAA5C;;EAEA,SAASC,WAAT,CAAqBX,IAArB,EAA2BY,MAA3B,EAAmC;IAC/B,MAAK;MAAER,KAAF;MAASH;IAAT,IAAwBD,IAA7B;;IAEA,IAAII,KAAK,CAACS,WAAN,GAAoBC,QAApB,CAA6BF,MAAM,CAACC,WAAP,EAA7B,KAAsDZ,WAAW,CAACY,WAAZ,GAA0BC,QAA1B,CAAmCF,MAAM,CAACC,WAAP,EAAnC,CAA1D,EAAoH;MAChH,OAAOb,IAAP;IACH,CAL8B,CAMjC;IACA;;EACD;;EAED,MAAMe,aAAa,GAAGjB,KAAK,CAACkB,MAAN,CAAahB,IAAI,IAAIW,WAAW,CAACX,IAAD,EAAOQ,UAAP,CAAhC,CAAtB;EACA,MAAMS,cAAc,GAAGT,UAAU,CAACU,MAAX,GAAoBH,aAApB,GAAoCjB,KAA3D,CAf0B,CAmB1B;;EAEA,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,uBACI;MAAM,QAAQ,EAAGqB,KAAD,IAAW;QACvBA,KAAK,CAACC,cAAN;MACH,CAFD;MAAA,wBAGE;QACC,IAAI,EAAG,MADR;QAEC,WAAW,EAAG,QAFf;QAGC,QAAQ,EAAKD,KAAD,IAAWV,aAAa,CAACU,KAAK,CAACE,MAAN,CAAaC,KAAd;MAHrC;QAAA;QAAA;QAAA;MAAA,QAHF,eAQE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcC,CAnCL;;GAAMf,U;;MAAAA,U;AAsCN,eAAeV,KAAf"},"metadata":{},"sourceType":"module"}